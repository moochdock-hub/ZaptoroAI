name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to Hostinger via SFTP (key auth)
        env:
          PORT: ${{ secrets.HOSTINGER_PORT || '65002' }}
        run: |
          sudo apt-get update && sudo apt-get install -y lftp openssh-client
          mkdir -p ~/.ssh
          echo "${{ secrets.HOSTINGER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Using SFTP port: $PORT"
          # Add host to known_hosts to avoid prompt
          ssh-keyscan -p "$PORT" ${{ secrets.hostinger_host }} >> ~/.ssh/known_hosts || true
          # Quick SSH connectivity test
          echo "Testing SSH connectivity..."
          ssh -i ~/.ssh/id_rsa -p "$PORT" -o BatchMode=yes -o StrictHostKeyChecking=no "${{ secrets.HOSTINGER_USER }}@${{ secrets.hostinger_host }}" "echo SSH_OK" || { echo "SSH connectivity failed"; exit 1; }

          # Deploy by streaming a tarball over SSH and extracting on the remote host (avoids lftp quoting issues)
          echo "Streaming tarball to remote and extracting to /home/u291229706/domains/zaptoroai.com/public_html/"
          tar -czf - --exclude .git --exclude .github --exclude node_modules --exclude .vscode . | ssh -i ~/.ssh/id_rsa -p "$PORT" -o StrictHostKeyChecking=no "${{ secrets.HOSTINGER_USER }}@${{ secrets.hostinger_host }}" "mkdir -p /home/u291229706/domains/zaptoroai.com/public_html/ && tar -xzf - -C /home/u291229706/domains/zaptoroai.com/public_html/"

      - name: Verify deployed file checksum
        run: |
          echo "Downloading deployed HTML and computing sha256..."
          sudo apt-get install -y curl coreutils
          curl -sS https://zaptoroai.com/ZAPTOROAI.html -o /tmp/deployed.html || true
          sha_deployed=$(sha256sum /tmp/deployed.html 2>/dev/null | awk '{print $1}' || echo "")
          sha_local=$(sha256sum ZAPTOROAI.html | awk '{print $1}')
          echo "deployed: $sha_deployed"
          echo "local:    $sha_local"
          if [ "$sha_deployed" = "$sha_local" ]; then echo "CHECKSUM MATCH: deployed file matches repo"; else echo "CHECKSUM MISMATCH: deployed file does NOT match repo"; exit 1; fi